{"version":3,"sources":["components/AccordionUncontrolled/reducer.tsx","components/AccordionUncontrolled/AccordionUncontrolled.tsx","Select/Select.tsx","App.tsx","reportWebVitals.ts","index.tsx","Select/Select.module.css"],"names":["reducer","state","action","type","collapsed","Error","AccordionUncontrolled","props","useReducer","dispatch","AccordionTitle","title","titleValue","onClick","AccordionBody","console","log","Select","useState","active","setActive","value","hoveredElementValue","setHoveredElementValue","selectedItem","items","find","i","hoveredItem","useEffect","toggleItems","className","s","select","onKeyUp","e","key","length","onChange","tabIndex","main","map","onMouseEnter","item","selected","App","selectItems","setValue","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2f10b42f.chunk.js","sourcesContent":["type ActionType = {\n    type: string\n}\n\nconst TOGGLE_CONSTANT = \"TOGGLE-COLLAPSED\"\n\nexport type StateType = {\n    collapsed: boolean\n}\nexport const reducer = (state: StateType, action: ActionType): StateType => {\n    switch( action.type ) {\n        case TOGGLE_CONSTANT:\n            return {...state, collapsed: !state.collapsed}\n        default:\n            throw new Error(\"Bad action Type\")\n    }\n}","import React, {useReducer} from 'react';\nimport {reducer} from \"./reducer\";\n\nexport type AccordionUncontrolledPropsType = {\n    titleValue: string;\n}\n\n\n\nexport function AccordionUncontrolled(props: AccordionUncontrolledPropsType) {\n    // let [collapsed, setCollapsed] = useState(true);\n    let [state, dispatch] = useReducer(reducer, {collapsed: false});\n    return <div>\n        <AccordionTitle title={props.titleValue} onClick={() => dispatch({type: \"TOGGLE-COLLAPSED\"})}/>\n        {!state.collapsed && <AccordionBody/>}\n    </div>\n}\n\ntype AccordionTitlePropsType = {\n    title: string;\n    onClick: () => void\n}\n\nfunction AccordionTitle(props: AccordionTitlePropsType) {\n    return (\n        <h3 onClick={() => {\n            props.onClick()\n        }}>--{props.title}--</h3>\n    )\n}\n\nfunction AccordionBody() {\n    console.log(\"AccordionBody rendering\")\n    return (\n        <ul>\n            <li>1</li>\n            <li>2</li>\n            <li>3</li>\n        </ul>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport s from './Select.module.css'\nimport {KeyboardEvent} from \"react\";\n\ntype ItemType = {\n    title: string\n    value: any\n}\n\nexport type SelectPropsType = {\n    value?: string\n    onChange: (value: string) => void\n    items: ItemType[]\n}\n\n\nexport function Select(props: SelectPropsType) {\n    const [active, setActive] = useState(false);\n    const [hoveredElementValue, setHoveredElementValue] = useState(props.value);\n\n    const selectedItem = props.items.find(i => i.title === props.value);\n    const hoveredItem = props.items.find(i => i.value === hoveredElementValue);\n\n    useEffect(() => {\n        setHoveredElementValue(props.value)\n    }, [props.value])\n\n    const toggleItems = () => setActive(!active)\n    const onItemClick = (title: string) => {\n        props.onChange(title)\n        toggleItems()\n    }\n    const onKeyUp = (e: KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\n            for (let i = 0; i < props.items.length; i++) {\n                if (props.items[i].value === hoveredElementValue) {\n                    const pretendentElement = e.key === \"ArrowDown\" ? props.items[i + 1] : props.items[i - 1]\n                    if (pretendentElement) {\n                        props.onChange(props.items[i + 1].value)\n                        return;\n                    }\n                }\n            }\n            if (!selectedItem)\n            props.onChange(props.items[0].value)\n\n        }\n\n        if (e.key === \"Enter\" || e.key === \"Escape\") {\n            setActive(false);\n        }\n    }\n    return (\n        <div>\n            <div className={s.select} onKeyUp={onKeyUp} tabIndex={0}>\n                <span className={s.main} onClick={toggleItems}>{selectedItem && selectedItem.title}</span>\n                {\n                    active &&\n                    <div className={s.items}>\n                        {props.items.map(i => <div\n                            onMouseEnter={() => {\n                                setHoveredElementValue(i.value)\n                            }}\n                            className={s.item + \" \" + (hoveredItem === i ? s.selected : \"\")}\n                            key={i.value}\n                            onClick={() => {\n                                onItemClick(i.title)\n                            }}\n                        >\n                            {i.title}\n                        </div>)}\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Accordion} from \"./components/Accordion/Accordion\";\nimport {Rating, RatingValueType} from './components/Rating/Rating';\nimport {OnOff} from \"./components/OnOff/OnOff\";\nimport {AccordionUncontrolled} from \"./components/AccordionUncontrolled/AccordionUncontrolled\";\nimport {RatingUncontrolled} from \"./components/RatingUncontrolled/RatingUncontrolled\";\nimport UncontrolledOnOff from \"./components/UncontrolledOnOff/UncontrolledOnOff\";\nimport {Select} from \"./Select/Select\";\n\n\nfunction App() {\n\n    let [ratingValue, setRatingValue] = useState<RatingValueType>(0)\n    let [switchOn, setSwitchOn] = useState<boolean>(false)\n    let [collapsed, setCollapsed] = useState<boolean>(false)\n\n    const selectItems = [{\n        title: 'Book',\n        value: '1'\n    },\n        {\n            title: 'Car',\n            value: '2'\n        },\n        {\n            title: 'House',\n            value: '3'\n        },\n        {\n            title: 'Flat',\n            value: '4'\n        }\n    ]\n    let [value, setValue] = useState<string>(selectItems[0].title)\n\n    const changeValue = (title: string) => {\n        debugger;\n        let newValue = selectItems.find( item => item.title === title && item.title)\n        debugger;\n        if (newValue)\n        setValue(newValue.title)\n    }\n    return (\n        <div>\n            {/*<OnOff on={switchOn} onChange={setSwitchOn} />*/}\n            {/*<UncontrolledOnOff onChange={setSwitchOn} /> {switchOn.toString()}*/}\n            <AccordionUncontrolled titleValue={\"Menu\"} />\n            {/*<RatingUncontrolled />*/}\n            {/*<Accordion titleValue={\"Menu\"} collapsed={collapsed} onChange={ () => setCollapsed(!collapsed)} items={[]} onClick={(value:any) => console.log('Hellow')}/>*/}\n            {/*<Accordion titleValue={\"Users\"} collapsed={true}/>*/}\n            {/*<Rating value={0} />*/}\n            {/*<Rating value={1} />*/}\n            {/*<Rating value={ratingValue} onClick={setRatingValue} />*/}\n            {/*<Rating value={3} />*/}\n            {/*<Rating value={4} />*/}\n            {/*<Rating value={5} />*/}\n            <Select value={value} onChange={changeValue} items={selectItems}/>\n        </div>\n    );\n}\n\n// type PageTitlePropsType = {\n//     title: string;\n// }\n//\n// function PageTitle(props: PageTitlePropsType) {\n//   console.log(\"PageTitle rendering\");\n//   return (\n//       <h1>{props.title}</h1>\n//   )\n// }\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3ZKLI\",\"main\":\"Select_main__2ZYEB\",\"items\":\"Select_items__vhyq7\",\"item\":\"Select_item__31jUN\",\"selected\":\"Select_selected__2O1XO\"};"],"sourceRoot":""}