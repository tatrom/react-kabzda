{"version":3,"sources":["components/Accordion/Accordion.tsx","components/Rating/Rating.tsx","components/OnOff/OnOff.tsx","components/AccordionUncontrolled/AccordionUncontrolled.tsx","components/UncontrolledOnOff/UncontrolledOnOff.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Accordion","props","AccordionTitle","title","titleValue","onClick","onChange","color","collapsed","AccordionBody","items","console","log","style","map","item","Rating","Star","selected","value","OnOff","onStyle","width","height","border","display","padding","cursor","background","on","offStyle","marginLeft","indicatorStyle","borderRadius","AccordionUncontrolled","useState","setCollapsed","UncontrolledOnOff","defaultOn","setOn","App","ratingValue","setRatingValue","switchOn","setSwitchOn","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc31ff7e.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nexport type ItemType = {\n    title: string\n    value: number\n}\nexport type AccordionPropsType = {\n    titleValue: string;\n    collapsed: boolean\n    onChange: () => void\n    /**\n     * Elements that are showed when is opened. Each item should be ItemType\n     */\n    items: ItemType[]\n    /**\n     * optional color of header text\n     */\n    color?: string\n}\n\nexport function Accordion(props: AccordionPropsType) {\n    return <div>\n        <AccordionTitle title={props.titleValue} onClick={props.onChange} color={props.color}/>\n        {!props.collapsed && <AccordionBody items={props.items}/>}\n    </div>\n}\n\ntype AccordionTitlePropsType = {\n\n    title: string;\n    onClick: () => void\n    color?: string\n}\n\nfunction AccordionTitle(props: AccordionTitlePropsType) {\n    console.log(\"Accordion title rendering\")\n    return (\n        <h3 style={{color: props.color ? props.color : 'black'}}\n            onClick={props.onClick}>--{props.title}--</h3>\n    )\n}\n\ntype AccordionBodyType = {\n    items: Array<ItemType>\n}\n\nfunction AccordionBody(props: AccordionBodyType) {\n\n    return (\n        <ul>\n            {props.items.map(item => {\n                return (\n                    <li>{item.title}</li>\n                )\n            })}\n        </ul>\n    )\n}\n","import React from 'react';\n\nexport type RatingValueType = 0 | 1 | 2 | 3 | 4 | 5;\nexport type RatingPropsType = {\n    value: RatingValueType\n    onClick: (value: RatingValueType) => void\n}\n\nexport function Rating(props: RatingPropsType) {\n    return <div>\n        <Star onClick={props.onClick} selected={props.value > 0} value={1}/>\n        <Star onClick={props.onClick} selected={props.value > 1} value={2}/>\n        <Star onClick={props.onClick} selected={props.value > 2} value={3}/>\n        <Star onClick={props.onClick} selected={props.value > 3} value={4}/>\n        <Star onClick={props.onClick} selected={props.value > 4} value={5}/>\n    </div>\n}\n\ntype StarPropsType = {\n    selected: boolean\n    onClick: (value: RatingValueType) => void\n    value: RatingValueType\n}\n\nexport function Star(props: StarPropsType) {\n\n    return <span onClick={() => props.onClick(props.value)}>{props.selected ? <b> star </b> : \" star \"}</span>\n}","import React, {useState} from 'react';\n\nexport type OnOffType = {\n    on: boolean\n    onChange: (on: boolean) => void\n}\n\nexport function OnOff(props: OnOffType) {\n\n    const onStyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        cursor: \"pointer\",\n        background: props.on ? \"green\" : \"white\"\n    };\n    const offStyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        marginLeft: \"2px\",\n        cursor: \"pointer\",\n        background: !props.on ? \"red\" : \"white\"\n    };\n    const indicatorStyle = {\n        width: \"10px\",\n        height: \"10px\",\n        borderRadius: \"10px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        marginLeft: \"5px\",\n        cursor: \"pointer\",\n        background: props.on ? \"green\" : \"red\"\n    };\n\n    return <div>\n        <div style={onStyle} onClick={ () => props.onChange(true)} >On</div>\n        <div style={offStyle} onClick={ () => props.onChange(false)} >Off</div>\n        <div style={indicatorStyle} ></div>\n    </div>\n}\n\n","import React, {useState} from 'react';\n\nexport type AccordionUncontrolledPropsType = {\n    titleValue: string;\n}\n\nexport function AccordionUncontrolled(props:AccordionUncontrolledPropsType) {\n    let [collapsed, setCollapsed] = useState(true);\n    return <div>\n        <AccordionTitle title={props.titleValue} onClick={ () => setCollapsed(!collapsed)} />\n\n        { !collapsed && <AccordionBody/> }\n    </div>\n}\n\ntype AccordionTitlePropsType = {\n    title: string;\n    onClick: () => void\n}\n\nfunction AccordionTitle(props: AccordionTitlePropsType) {\n    return (\n        <h3 onClick={ () => {props.onClick()}}>--{props.title}--</h3>\n    )\n}\n\nfunction AccordionBody() {\n    console.log(\"AccordionBody rendering\")\n    return (\n        <ul>\n            <li>1</li>\n            <li>2</li>\n            <li>3</li>\n        </ul>\n    )\n}","import React, {useState} from 'react';\n\nexport type UncontrolledOnOffPropsType = {\n    onChange: (value: boolean) => void\n    defaultOn?: boolean\n}\n\n\nfunction UncontrolledOnOff(props: UncontrolledOnOffPropsType) {\n    console.log(\"OnOff rendering\")\n    let [on, setOn] = useState(props.defaultOn ? props.defaultOn : false);\n\n    const onStyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        cursor: \"pointer\",\n        background: on ? \"green\" : \"white\"\n    };\n    const offStyle = {\n        width: \"30px\",\n        height: \"20px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        marginLeft: \"2px\",\n        cursor: \"pointer\",\n        background: !on ? \"red\" : \"white\"\n    };\n    const indicatorStyle = {\n        width: \"10px\",\n        height: \"10px\",\n        borderRadius: \"10px\",\n        border: \"1px solid black\",\n        display: \"inline-block\",\n        padding: \"2px\",\n        marginLeft: \"5px\",\n        cursor: \"pointer\",\n        background: on ? \"green\" : \"red\"\n    };\n\n    const onClicked = () => {\n        setOn(true)\n        props.onChange(true)\n    }\n    const offClicked = () => {\n        setOn(false)\n        props.onChange(false)\n    }\n\n    return <div>\n        <div style={onStyle} onClick={onClicked}>On\n        </div>\n        <div style={offStyle} onClick={offClicked}>Off\n        </div>\n        <div style={indicatorStyle}></div>\n    </div>\n}\n\nexport default UncontrolledOnOff;\n\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Accordion} from \"./components/Accordion/Accordion\";\nimport {Rating, RatingValueType} from './components/Rating/Rating';\nimport {OnOff} from \"./components/OnOff/OnOff\";\nimport {AccordionUncontrolled} from \"./components/AccordionUncontrolled/AccordionUncontrolled\";\nimport {RatingUncontrolled} from \"./components/RatingUncontrolled/RatingUncontrolled\";\nimport UncontrolledOnOff from \"./components/UncontrolledOnOff/UncontrolledOnOff\";\n\n\nfunction App() {\n\n    let [ratingValue, setRatingValue] = useState<RatingValueType>(0)\n    let [switchOn, setSwitchOn] = useState<boolean>(false)\n    let [collapsed, setCollapsed] = useState<boolean>(false)\n    return (\n        <div>\n            <OnOff on={switchOn} onChange={setSwitchOn} />\n            <UncontrolledOnOff onChange={setSwitchOn} /> {switchOn.toString()}\n            <AccordionUncontrolled titleValue={\"Menu\"} />\n            {/*<RatingUncontrolled />*/}\n            <Accordion titleValue={\"Menu\"} collapsed={collapsed} onChange={ () => setCollapsed(!collapsed)} items={[]}/>\n            {/*<Accordion titleValue={\"Users\"} collapsed={true}/>*/}\n            {/*<Rating value={0} />*/}\n            {/*<Rating value={1} />*/}\n            <Rating value={ratingValue} onClick={setRatingValue} />\n            {/*<Rating value={3} />*/}\n            {/*<Rating value={4} />*/}\n            {/*<Rating value={5} />*/}\n        </div>\n    );\n}\n\n// type PageTitlePropsType = {\n//     title: string;\n// }\n//\n// function PageTitle(props: PageTitlePropsType) {\n//   console.log(\"PageTitle rendering\");\n//   return (\n//       <h1>{props.title}</h1>\n//   )\n// }\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}